# ======================= STENEXv4.7.1 Build Script ================= #
# Usage: bldit.se >&! bldit.se.log                                    #
# Requirements: CVS, PGI or Intel Fortran compiler, and MPICH         #
# Note that this script is configured/tested for Red Hat Linux O/S    #
# The following environment variables must be set for this script to  #
# build an executable.                                                #
#   setenv M3MODEL =  source code CVS archive                         #
#   setenv M3LIB   =  code libraries                                  #
# To report problems or request help with this script/program:        #
#             http://www.cmascenter.org/help_desk.cfm                 #
# =================================================================== #

## Check for M3MODEL and M3LIB settings:
 if ( ! -e $M3MODEL || ! -e $M3LIB ) then
    echo "   $M3MODEL or $M3LIB directory not found"
    exit 1
    endif
 echo "   Model archive path: $M3MODEL"
 echo "            LIBS path: $M3LIB"

 set BLD_OS = `uname -s``uname -r | cut -d. -f1`  ## Script set up for Linux 
# if ($BLD_OS != 'Linux2') then
#    echo "   $BLD_OS -> wrong bldit script for host\!"
#    exit 1
#    endif

 set echo

#:#:#:#:#:#:#:#:#:#:#:Begin User Input Section #:##:#:#:#:#:#:#:#:#:#:#
 
#> Set BASE to the working directory for compiling the Stenex library 
 set BASE = /hpcfs/home/ca.moreno12/.conda/envs/cmaq_env/CMAQ_4.7.1/CMAQ_REPO/models/STENEX/src 

#> Set location of MPICH include files
 set INCL = /hpcfs/home/ca.moreno12/.conda/envs/cmaq_env/openmpi-1.8.1/install/include 

#> Set full path of Fortran 90 compiler 
 set FC = /hpcfs/home/ca.moreno12/.conda/envs/cmaq_env/intel/compilers_and_libraries/linux/bin/intel64/ifort
 set FSTD = 

#> Portland Group Fortran 9.01 Compiler Flags
#  set FSTD = "-Mfixed -Mextend -c"

#> Intel Fortran 10.1 Compiler Flags

# set DEBUG     # Uncomment to create debug version of library

#:#:#:#:#:#:#:#:#:#:#:# End of User Input Section :#:#:#:#:#:#:#:#:#:#:#:#:#

if ( $?DEBUG ) then
    set F_FLAGS = "${FSTD} -g -I${INCL}"
 else
    set F_FLAGS = "${FSTD} -O2 -I${INCL}"
 endif

 set MACH = `uname -m`
 set COMP = `echo $FC | grep -o pg`
 if ( $status == 0 ) then
 else
 set COMP = `echo $FC | grep -o intel`
 endif
 if ( $status == 1 ) then
    echo
    echo "This script is configured for PGI or Intel Fortran."
    echo "Manually set the FC, FSTD, and COMP variables"
    echo "for alternative configurations."
    echo
 endif

 set DEST = ${M3LIB}/stenex/${BLD_OS}_${MACH}${COMP}  # location of output library files
 if ( ! -d "$DEST" ) mkdir -p $DEST
 set RM = "/bin/rm -f"
 set MV = "/bin/mv -f"

 setenv CVSROOT $M3MODEL/STENEX/CVSROOT

 set Bld = $BASE/BLD
 if ( ! -e "$Bld" ) then
    mkdir $Bld
    else
    if ( ! -d "$Bld" ) then
       echo "   *** target exists, but not a directory ***"
       exit 1
    endif
 endif

 cd $Bld

 echo " "
 echo "Host: " `hostname`
 echo "Host operating system:       $BLD_OS"
 echo "Libraries/objects/f90-modules directory: $DEST"
 echo " "

 set flist = (\
    se_comm_info_ext.f\
    se_disp_info_ext.f\
    se_domain_info_ext.f\
    se_ori_ext.f\
    se_pe_info_ext.f\
    se_subgrid_info_ext.f\
    se_reconfig_grid_info_ext.f\
    se_bndy_copy_info_ext.f\
    se_internal_util_module.f\
    se_global_max_module.f\
    se_global_min_module.f\
    se_global_sum_module.f\
    se_util_module.f\
    se_data_send_module.f\
    se_data_recv_module.f\
    se_slice_module.f\
    se_comm_module.f\
    se_gather_module.f\
    se_data_copy_module.f\
    se_reconfig_grid_module.f\
    se_bndy_copy_module.f\
    swap_sandia.f\
    swap_sandia_routines.f\
    se_init_module.F\
    se_term_module.f\
    se_modules.f )

#> extract source files from cvs archive
 foreach file ( $flist )
    cvs export -r HEAD -d $Bld se_snl/$file
    end

 if ( $?DEBUG ) then
    set Arc = libse_snl.debug.a
    else
    set Arc = libse_snl.a
    endif
 if ( -e "$Arc" ) $RM $Arc *.mod

#> compile in the flist order (se_modules.f depends on the others)
 foreach file ( $flist )
    $FC $F_FLAGS $file
    end

 ar rv $Arc *.o
 chmod 444 $Arc
 if ( -e "$DEST/$Arc" ) $MV $DEST/$Arc $DEST/$Arc.old
 $MV $Arc $DEST
 $MV *.mod $DEST      # for ifc 7.1

 if ( $?DEBUG ) then
    $MV *.o $DEST
    else
    $RM *.o
    endif
 echo " "; echo " Finish building $DEST/$Arc "
 exit()